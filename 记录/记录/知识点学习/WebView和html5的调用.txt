
注入 Java 对象到 WebView 中。
 
webView.addJavascriptInterface(new JavascriptHandler(), "handler");_____"handler"这个可以随便写只要和js调用这个对象参数保持一致就可以了。

好像js里面有个histroy.back是网页的返回键

Android WebView是什么？  http://www.2cto.com/kf/201410/344172.html

//设置编码　　
　　mWebView.getSettings().setDefaultTextEncodingName("utf-8");

下面这五个网址比较全了
   
Android之Android WebView常见问题及解决方案汇总         http://blog.sina.com.cn/s/blog_5da93c8f0102wgds.html
Android混合开发之WebView使用总结 http://www.cnblogs.com/whoislcj/p/5645025.html
android 中webview基本使用的方法小结http://blog.csdn.net/abc__d/article/details/51683511
android中WebView加载网页居中显示http://www.open-open.com/lib/view/open1429772758729.html
android webview让内容充满屏幕的方法http://blog.csdn.net/chniccs/article/details/49665363

Android WebView使用基础 http://www.cnblogs.com/mengdd/archive/2013/03/01/2938295.html

Java WebView 交互（互传参数）   http://blog.csdn.net/jjyyhema/article/details/6545640  (这个讲了如何交互js从java中获取数据)






               Android WebView加载html5页面实例教程                                        http://www.111cn.net/sj/android/92781.htm

              Android WebView如何加载assets下的html文件                                    http://www.cnphp6.com/archives/58922


http://blog.csdn.net/woaifen3344/article/details/49452227
WKWebView比UIWebView强大许多***********


http://www.jianshu.com/p/d533d2d44814  详细
1.http://liangruijun.blog.51cto.com/3061169/647456/   
  http://www.cnblogs.com/tinyphp/p/3858997.html                            控件WebView显示网页
  http://blog.csdn.net/harvic880925/article/details/51523983               详细点


  http://www.cnblogs.com/yaozhongxiao/p/3408948.html                        android + javascript 相互通信实例分析     @JavascriptInterface  
  http://www.cnblogs.com/lee0oo0/archive/2012/08/01/2617953.html            Android之如何使用javascript调用android代码
  https://www.evget.com/article/2013/11/8/20020.html
  http://blog.csdn.net/cappuccinolau/article/details/8262821                 Android WebView 与JS的数据交互
  http://www.cnblogs.com/qianru/archive/2012/02/27/2369526.html

  http://blog.csdn.net/xiangjai/article/details/8306276                     利用HTML5开发Android


http://blog.csdn.net/ethan_xue/article/details/7841431
在前进按钮点击的时候执行
if(webView.canGoForward()){  
                webView.goForward();  
            }else{  
                Toast("已经是最后一页了,不能再前进了");  
            }  

在刷新按钮点击的时候执行
webView.reload();  



webView.getSettings().setCacheMode(WebSettings.LOAD_DEFAULT); 

// 开启 DOM storage API 功能
 
webView.getSettings().setDomStorageEnabled(true);















5、如果希望点击链接由自己处理，而不是新开Android的系统browser中响应该链接。
          给WebView添加一个事件监听对象（WebViewClient)   



++++++++++++++++++++++++
(3)实现android与js交互
默认情况下WebView中的js是禁用的，通过将WebSettings附加到WebView中启动js，可以用getSettings()检索WebSettings,然后用setJavaScriptEnabled()启动js。
mWebView.getSettings().setJavaScriptEnabled(true);
 //设置js可用
        webSetting.setJavaScriptEnabled(true);
        // 添加js调用接口
        webView.addJavascriptInterface(this,"android");
        webView.getSettings().setJavaScriptEnabled(true);

mWebView.setWebChromeClient(new WebChromeClient());
（4）在JS中调用Android的函数方法 
把本类的一个实例添加到js的全局对象window中，这里是"injs"。

.添加一个对象, 让JS可以访问该对象的方法, 该对象中也可以调用JS中的方法
mWebView.addJavascriptInterface(new JavaScriptInterface(),"injs");
实现JavaScriptInterface()类，这里在该类中定义一个方法public void runOnAndroidJavaScript(final String str){...}
在js中调用java函数
windows.injs.runOnAndroidJavaScript(str);//调用android的函数 
+++++++++++++++++++++++++++++++++++


*******************
webView.addJavascriptInterface(new javascriptInterface(), "bridge"); 把javascriptInterface的一个实例“bridge”添加到js的全局对象window中
然后就可以在js中调用javascriptInterface类中的方法，安卓在javascriptInterface类里面来处理相应方法，js你负责调用，安卓负责处理。
*******************


WebView.canGoBack()和WebView.canGoForward() 在我这个页面这两个键是同一个键都是手机的返回键？？？**********


// 添加一个对象, 让JS可以访问该对象的方法, 该对象中可以调用JS中的方法
webView.addJavascriptInterface(new Contact(), "contact");
}
private final class Contact {
//JavaScript调用此方法拨打电话
public void call(String phone) {
startActivity(new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + phone)));
}
//Html调用此方法传递数据
public void showcontacts() {
String json = "[{"name":"zxx", "amount":"9999999", "phone":"18600012345"}]"; 
// 调用JS中的方法
webView.loadUrl("javascript:show('" + json + "')");
}
}
}







private static Stack<MainActivity> mStack;

//用来模拟原生应用的页面跳转
        if (mStack == null) {
            mStack = new Stack<>();
        }

        mStack.push(this);





11-23 16:26:38.578 10824-10824/com.lampo.zbhrt I/chromium: [INFO:CONSOLE(10)] "-1", source: http://app.naja.51jk.com/js/count_number.js (10)
11-23 16:26:38.686 10824-10824/com.lampo.zbhrt I/chromium: [INFO:CONSOLE(10)] "-1", source: http://app.naja.51jk.com/js/count_number.js (10)

这个里捕获到webView页面的左上角那个返回按钮了***********????


最有意思的是程序进入主界面，那个系统返回键就仅仅是一个返回键，当进入其他页面，这个webView和系统的返回键合二为一，然后那个左上角那个页面的返回键
起到系统返回键的功能？？？*************


  if(webView.canGoBack()){
            Log.d("<<<<<","点击后退按钮canGoBack()");
            //webView.goBack();
        }
        if(webView.canGoForward()){
            Log.d("<<<<<","点击后退按钮canGoForward()");
            webView.goForward();
        }else{
            Log.d("<<<<<","已经是最后一页了,不能再前进了");
        }
        if(!webView.getUrl().equals(URL)){
            Log.d("<<<<<","判断URL");
            //webView.loadUrl(URL);
        }
        if ( (keyCode == KeyEvent.KEYCODE_BACK) && webView.canGoBack() ) {
            Log.d("<<<<<","两个键");
            webView.goBack(); //goBack()表示返回WebView的上一页面
            return true;



@Override
    public void onBackPressed() {
        popActivity();

//        javaCallJs();
    }


 private void popActivity() {
        if (mStack.size() > 0) {
            mStack.remove(this);
            this.finish();
        }
    }





也是同一个键



================================2017/4/11
自己的测试工程师API24，所以使用宏仁堂的项目中的方法：
webView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                if ( url.startsWith("http:") || url.startsWith("https:") ) {
                    return false;
                }
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
                startActivity(intent);
                return true;
            }
        });

shouldOverrideUrlLoading是过时的方法，所以导致自己捕获https:请求在webView里面显示失败，然后自己使用了：
webView.setWebViewClient(new WebViewClient(){

            @TargetApi(Build.VERSION_CODES.LOLLIPOP)
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
                if(request.getUrl().toString().startsWith("https://www.baidu.com/")){
                    Intent intent = new Intent(Intent.ACTION_VIEW, request.getUrl());
                    startActivity(intent);
                    return true;
                }
                return false;
            }
        });
这样写就可以了。宏仁堂是API 22

android之webview使用 http://blog.csdn.net/xiangjai/article/details/8306276

=====================================================================================
Android 利用WebViewJavascriptBridge 实现js和java的交互（一） http://blog.csdn.net/sk719887916/article/details/47189607 
(解读)：
在js中我们同样可以直接注册一个回调函数，通过 bridge.registerHandler（）来注册，接着调用 responseCallback(responseData)来返回数据给java代码的同名函数
也可以直接调用init()来指定网页首次加载上面注册java代码：
connectWebViewJavascriptBridge(function(bridge) {                                           ①
          bridge.init(function(message, responseCallback) {  
              console.log('JS got a message', message);  
              var data = {  
                  'Javascript Responds': 'Wee!'  
              };  
              console.log('JS responding with', data);  
              responseCallback(data);  
          });  
  
          bridge.registerHandler("functionInJs", function(data, responseCallback) {  
              document.getElementById("show").innerHTML = ("data from Java: = " + data);  
              var responseData = "Javascript Says Right back aka!";  
              responseCallback(responseData);  
          });  
      })  
上面这段代码会在页面首次加载的时候执行：
webView.callHandler("functionInJs", new Gson().toJson(user), new CallBackFunction() {         ②
            @Override
            public void onCallBack(String data) {
                Toast.makeText(WebViewJSBridge.this,"网页在获取你的位置",Toast.LENGTH_SHORT).show();
            }
        });
②处的代码是在收到①处的代码返回值后，回调执行。









在android开发中，当不满足触发条件就按返回键的时候，就要对此进行检测。尤其是当前Activity需要往前一个Activity传送消息时。即Activity1跳转到Activity3如果采用的是startActivityForResult这种方式，如果不重写返回键，程序不知道要返回给Activity1什么内容就会报错。因此，必须对Activity3的返回按键重写，这里让他传一个“ERROR”信息：

复制代码 代码如下:
@Override
    public void onBackPressed() {
       // TODO Auto-generated method stub
     Intent backIntent = new Intent(Activity3.this, Activity1.class);
       Bundle bundle = new Bundle();
       if(!clickOk)
           bundle.putString("send", "ERROR");
       backIntent.putExtras(bundle);
       Activity3.this.setResult(1, backIntent);
       Activity3.this.finish();
        //super.onBackPressed();               
    }
http://blog.csdn.net/linuxcjh/article/details/8116309 




*******************************遇到问题与解决

webview网页自适应手机屏幕大小 http://blog.sina.com.cn/s/blog_51d070860101ftcn.html

Android中如何判别WebView加载完毕并使用ProgressDialog进行提示    http://www.2cto.com/kf/201204/126794.html  （排断这个页面是否加载完毕）





















